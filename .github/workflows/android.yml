name: Android APK (arm64 release)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 0) Kodu indir
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Flutter kur
      - name: Set up Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"
          channel: "stable"
          cache: true

      # 2) Android klasörü yoksa oluştur
      - name: Ensure Android platform exists
        shell: bash
        run: |
          if [ ! -f android/app/src/main/AndroidManifest.xml ]; then
            echo "android/ not found; creating..."
            flutter create . --platforms=android
          else
            echo "android/ already exists."
          fi

      # 3) Java 17 (Gradle/AGP için)
      - name: Set up Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"

      # 4) Bağımlılıkları indir (ağ hatası varsa 5 kez dener)
      - name: Flutter pub get (retry)
        shell: bash
        run: |
          for i in {1..5}; do
            flutter pub get && break
            echo "Retrying flutter pub get ($i/5)..."
            sleep 10
          done

      # 5) Ortamı gör (teşhis için)
      - name: Flutter doctor
        run: flutter doctor -v

      # 6) Önce DEBUG derle (hata varsa çabuk yakalar) ve ayrıntılı log üret
      - name: Build debug APK (verbose)
        run: flutter build apk --debug --verbose | tee debug_build.log

      # 7) Debug başarısızsa direkt çıkmasın; log’u yükleyelim
      - name: Upload debug logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: debug_build.log

      # 8) Debug geçtiyse RELEASE derle (arm64 ayrı APK)
      - name: Build release APK (arm64, verbose)
        if: ${{ success() }}
        run: flutter build apk --release --split-per-abi --target-platform=android-arm64 --verbose | tee release_build.log

      # 9) APK ve logları yükle
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            build/app/outputs/**/*.apk
            release_build.log
            debug_build.log
          if-no-files-found: warn
